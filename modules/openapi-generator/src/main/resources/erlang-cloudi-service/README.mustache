# OpenAPI server library for Erlang/CloudI service

## Overview

An Erlang CloudI service stub generated by [OpenAPI Generator](https://openapi-generator.tech) given an OpenAPI spec.

Dependency: [Cowboy](https://github.com/ninenines/cowboy), [CloudI](https://github.com/CloudI/CloudI)

## Prerequisites

TODO

## Getting started

Use erlang-cloudi-service with rebar3.

1. Install and run CloudI

2. Generate erlang-cloudi-service project using openapi-generator
		https://github.com/OpenAPITools/openapi-generator#2---getting-started

	```bash
	$ cd openapi-generator

	# build generators
	$ mvn clean install

	# generate service
	$ java -cp modules/openapi-generator-cli/target/openapi-generator-cli.jar org.openapitools.codegen.OpenAPIGenerator \
	generate -g erlang-cloudi-service -i <\URL|FILE\>.yaml --package-name {{packageName}} -o /tmp/{{packageName}}

	# Example: generate petstore service
	$ java -cp modules/openapi-generator-cli/target/openapi-generator-cli.jar org.openapitools.codegen.OpenAPIGenerator \
	generate -g erlang-cloudi-service \
	-i https://raw.githubusercontent.com/openapitools/openapi-generator/master/modules/openapi-generator/src/test/resources/3_0/petstore.yaml \
	--package-name petstore -o /tmp/petstore
	```

3. Build

	```bash
	cd /tmp/{{packageName}}
	$ rebar3 compile
	```

4. Add service to CloudI

	```bash
	source /develop/python/venv/bin/activate
	python
	```

	```python
	import cloudi

	POC_PATH = '~/workspace/env/poc'
	cloudit.set_cwd(POC_PATH)
	cloudit.setup("{}/pad_cloudi_containers/docker/conf/cloudit.setup.conf".format(POC_PATH))
	cloudit.code_path_add(POC_PATH + "/{{packageName}}/_build/default/lib/openapi/ebin/")
	cloudit.code_path_add(POC_PATH + "/{{packageName}}/_build/default/lib/jsx/ebin/")
	cloudit.code_path_add(POC_PATH + "/{{packageName}}/_build/default/lib/jesse/ebin/")
	cloudit.code_path_add(POC_PATH + "/{{packageName}}/_build/default/lib/rfc3339/ebin/")
	cloudit.code_path_add("{{packageName}}")
	cloudit.service_add("{{packageName}}")
	```

Edit `{{packageName}}_impl.erl` file to handle your API requests
