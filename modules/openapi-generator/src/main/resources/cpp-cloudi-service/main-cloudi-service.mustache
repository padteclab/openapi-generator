{{>licenseInfo}}

#ifdef __linux__
#include <vector>
#include <signal.h>
#include <unistd.h>
#endif
#include <cassert>
#include <memory>
#include <string>

{{#apiInfo}}{{#apis}}{{#operations}}
#include "{{classname}}Impl.h"{{/operations}}{{/apis}}{{/apiInfo}}
#include "cloudi.hpp"

using namespace {{apiNamespace}};

int main() {
  unsigned int const thread_count = CloudI::API::thread_count();
  assert(thread_count == 1);
  auto api = std::make_shared<CloudI::API>(0);

  {{#apiInfo}}{{#apis}}{{#operations}}
  {{classname}}Impl {{classname}}ServiceApi(api);
  {{classname}}ServiceApi.init();{{/operations}}{{/apis}}{{/apiInfo}}

  return api->poll();
}
