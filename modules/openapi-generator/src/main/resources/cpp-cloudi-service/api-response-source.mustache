{{>licenseInfo}}

#include "{{prefix}}Helpers.h"
#include "{{prefix}}Error.h"
#include "{{packageName}}Response.h"

namespace {{apiNamespace}}
{

using namespace {{helpersNamespace}};
using namespace {{modelNamespace}};
using json = nlohmann::json;
using std::to_string;

json generateResponseError(int code, const std::string& title, const std::string& detail, const std::string& source) {
  ErrorItem error_item;
  error_item.setCode(code);
  error_item.setTitle(title);
  error_item.setDetail(detail);
  error_item.setSource(source);

  std::vector<org::openapitools::server::model::ErrorItem> error_list = {error_item};

  Error error_response;
  error_response.setErrors(error_list);

  json j;
  to_json(j, error_response);
  return j;
}

void generateResponseInfo(CloudI::API const &api, int http_code, char const* &response, uint32_t &response_info_size) {
  std::string code(to_string(http_code));
  const char* http_response_headers[] = {
    "content-type", "application/json", "status", code.c_str(),
    nullptr
  };
  response = api.info_key_value_new(http_response_headers, response_info_size, true);
  api.free_response_info();
}

}
